{"version":3,"sources":["components/CommentInfo/CommentInfo.jsx","components/CommentList/CommentList.jsx","components/UserInfo/UserInfo.jsx","components/PostInfo/PostInfo.jsx","components/PostList/PostList.jsx","App.jsx","index.jsx"],"names":["CommentInfo","comment","name","email","body","className","href","CommentList","comments","map","id","UserInfo","user","PostInfo","post","title","length","PostList","posts","postsFromServer","userId","usersFromServer","find","postId","commentsFromServer","filter","App","ReactDOM","render","document","getElementById"],"mappings":"408IAAaA,EAAc,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAE1BC,EAGED,EAHFC,KACAC,EAEEF,EAFFE,MACAC,EACEH,EADFG,KAGF,OACE,mCACE,sBAAKC,UAAU,cAAf,UACE,sBAAKA,UAAU,qBAAf,UACE,wBAAQA,UAAU,oBAAlB,SAAuCH,IACvC,+BAAO,SACP,mBACEG,UAAU,qBACVC,KAAI,iBAAYH,GAFlB,SAIGA,OAIL,qBAAKE,UAAU,oBAAf,SACGD,UCnBEG,G,MAAc,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OACzB,mCACE,qBAAKH,UAAU,cAAf,SACGG,EAASC,KAAI,SAAAR,GAAO,OACnB,cAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQS,aCLrBC,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBV,EAEEU,EAFFV,KACAC,EACES,EADFT,MAGF,OACE,mBAAGE,UAAU,WAAWC,KAAI,iBAAYH,GAAxC,SACGD,MCNMW,G,MAAW,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAEvBC,EAIED,EAJFC,MACAX,EAGEU,EAHFV,KACAQ,EAEEE,EAFFF,KACAJ,EACEM,EADFN,SAGF,OACE,sBAAKH,UAAU,WAAf,UACE,sBAAKA,UAAU,mBAAf,UACE,oBAAIA,UAAU,kBAAd,SACGU,IAGFH,GACC,8BACG,eAED,cAAC,EAAD,CAAUA,KAAMA,UAKtB,mBAAGP,UAAU,iBAAb,SACGD,IAGH,uBAGEI,EAASQ,OACL,cAAC,EAAD,CAAaR,SAAUA,IACvB,mBAAG,UAAQ,oBAAX,kCCnCCS,EAAW,SAAC,GAAD,IAAGC,EAAH,EAAGA,MAAH,OACtB,mCACE,qBAAKb,UAAU,WAAf,SACGa,EAAMT,KAAI,SAAAK,GAAI,OACb,cAAC,EAAD,CAAwBA,KAAMA,GAAfA,EAAKJ,YCS5B,IAAMQ,EAAQC,EAAgBV,KAAI,SAAAK,GAAI,kCACjCA,GADiC,IAEpCF,MANeQ,EAMDN,EAAKM,OALZC,EAAgBC,MAAK,SAAAV,GAAI,OAAIA,EAAKF,KAAOU,MAAW,MAM3DZ,UAXkBe,EAWGT,EAAKJ,GAVnBc,EAAmBC,QAAO,SAAAxB,GAAO,OAAIA,EAAQsB,SAAWA,QADjE,IAAoBA,EAIHH,KAUJM,EAAM,kBACjB,0BAASrB,UAAU,MAAnB,UACE,oBAAIA,UAAU,aAAd,kCACA,cAAC,EAAD,CAAUa,MAAOA,QCpBrBS,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.223f33d1.chunk.js","sourcesContent":["export const CommentInfo = ({ comment }) => {\n  const {\n    name,\n    email,\n    body,\n  } = comment;\n\n  return (\n    <>\n      <div className=\"CommentInfo\">\n        <div className=\"CommentInfo__title\">\n          <strong className=\"CommentInfo__name\">{name}</strong>\n          <span>{' by '}</span>\n          <a\n            className=\"CommentInfo__email\"\n            href={`mailto:${email}`}\n          >\n            {email}\n          </a>\n        </div>\n\n        <div className=\"CommentInfo__body\">\n          {body}\n        </div>\n      </div>\n    </>\n  );\n};\n","import { CommentInfo } from '../CommentInfo';\nimport './CommentList.scss';\n\nexport const CommentList = ({ comments }) => (\n  <>\n    <div className=\"CommentList\">\n      {comments.map(comment => (\n        <CommentInfo key={comment.id} comment={comment} />\n      ))}\n    </div>\n  </>\n);\n","import './UserInfo.scss';\n\nexport const UserInfo = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { CommentList } from '../CommentList';\nimport { UserInfo } from '../UserInfo';\nimport './PostInfo.scss';\n\nexport const PostInfo = ({ post }) => {\n  const {\n    title,\n    body,\n    user,\n    comments,\n  } = post;\n\n  return (\n    <div className=\"PostInfo\">\n      <div className=\"PostInfo__header\">\n        <h3 className=\"PostInfo__title\">\n          {title}\n        </h3>\n\n        {user && (\n          <p>\n            {' Posted by  '}\n\n            <UserInfo user={user} />\n          </p>\n        )}\n      </div>\n\n      <p className=\"PostInfo__body\">\n        {body}\n      </p>\n\n      <hr />\n\n      {\n        comments.length\n          ? <CommentList comments={comments} />\n          : <b data-cy=\"NoCommentsMessage\">No comments yet</b>\n      }\n    </div>\n  );\n};\n","import { PostInfo } from '../PostInfo';\n\nexport const PostList = ({ posts }) => (\n  <>\n    <div className=\"PostList\">\n      {posts.map(post => (\n        <PostInfo key={post.id} post={post} />\n      ))}\n    </div>\n  </>\n);\n","import './App.scss';\n\nimport postsFromServer from './api/posts.json';\nimport commentsFromServer from './api/comments.json';\nimport usersFromServer from './api/users.json';\nimport { PostList } from './components/PostList';\n\nfunction getComment(postId) {\n  return commentsFromServer.filter(comment => comment.postId === postId);\n}\n\nfunction getUser(userId) {\n  return usersFromServer.find(user => user.id === userId) || null;\n}\n\nconst posts = postsFromServer.map(post => ({\n  ...post,\n  user: getUser(post.userId),\n  comments: getComment(post.id),\n}));\n\nexport const App = () => (\n  <section className=\"App\">\n    <h1 className=\"App__title\">Static list of posts</h1>\n    <PostList posts={posts} />\n  </section>\n);\n","import ReactDOM from 'react-dom';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}